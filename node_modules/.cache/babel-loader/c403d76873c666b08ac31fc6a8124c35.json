{"ast":null,"code":"//import { legacy_createStore as createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\nimport counterReducer from '../store/counterSlice';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"Authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // // using redux \n// const counterReducer = (state = intState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","counterReducer","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","auth","authActions","actions"],"sources":["C:/Users/vinovinodkumar/Desktop/udemy/01-starting-project/src/store/index.js"],"sourcesContent":["//import { legacy_createStore as createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport counterReducer from '../store/counterSlice';\r\n\r\nconst initialAuthState ={isAuthenticated:false};\r\n\r\nconst authSlice = createSlice({\r\n    name:\"Authentication\",\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){state.isAuthenticated=true},\r\n        logout(state){state.isAuthenticated=false}\r\n    }\r\n})\r\n// // using redux \r\n// const counterReducer = (state = intState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter\r\n//         }\r\n//     }\r\n//     return state;\r\n\r\n// }\r\n\r\n// const store = createStore(counterReducer);\r\nconst store = configureStore({\r\n    reducer :{counter:counterReducer,auth:authSlice.reducer}\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,MAAMC,gBAAgB,GAAE;EAACC,eAAe,EAAC;AAAjB,CAAxB;AAEA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,gBADqB;EAE1BC,YAAY,EAACJ,gBAFa;EAG1BK,QAAQ,EAAC;IACLC,KAAK,CAACC,KAAD,EAAO;MAACA,KAAK,CAACN,eAAN,GAAsB,IAAtB;IAA2B,CADnC;;IAELO,MAAM,CAACD,KAAD,EAAO;MAACA,KAAK,CAACN,eAAN,GAAsB,KAAtB;IAA4B;;EAFrC;AAHiB,CAAD,CAA7B,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA,MAAMQ,KAAK,GAAGZ,cAAc,CAAC;EACzBa,OAAO,EAAE;IAACC,OAAO,EAACZ,cAAT;IAAwBa,IAAI,EAACV,SAAS,CAACQ;EAAvC;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAMG,WAAW,GAAGX,SAAS,CAACY,OAA9B;AAEP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}