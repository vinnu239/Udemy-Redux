{"ast":null,"code":"//import { legacy_createStore as createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"Authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // // using redux \n// const counterReducer = (state = intState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/vinovinodkumar/Desktop/udemy/01-starting-project/src/store/index.js"],"sourcesContent":["//import { legacy_createStore as createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst initialAuthState ={isAuthenticated:false};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState:initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        }\r\n\r\n    }\r\n})\r\nconst authSlice = createSlice({\r\n    name:\"Authentication\",\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){state.isAuthenticated=true},\r\n        logout(state){state.isAuthenticated=false}\r\n    }\r\n})\r\n// // using redux \r\n// const counterReducer = (state = intState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter\r\n//         }\r\n//     }\r\n//     return state;\r\n\r\n// }\r\n\r\n// const store = createStore(counterReducer);\r\nconst store = configureStore({\r\n    reducer :{counter:counterSlice.reducer,auth:authSlice.reducer}\r\n});\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,gBAAgB,GAAE;EAACC,eAAe,EAAC;AAAjB,CAAxB;AAEA,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,SADuB;EAE7BC,YAAY,EAACP,mBAFgB;EAG7BQ,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAQ;MACbA,KAAK,CAACT,OAAN;IACH,CAHK;;IAINU,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACT,OAAN;IACH,CANK;;IAONW,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpBH,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBY,MAAM,CAACC,OAAvC;IACH,CATK;;IAUNC,aAAa,CAACL,KAAD,EAAO;MAChBA,KAAK,CAACR,WAAN,GAAkB,CAACQ,KAAK,CAACR,WAAzB;IACH;;EAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMc,SAAS,GAAGjB,WAAW,CAAC;EAC1BO,IAAI,EAAC,gBADqB;EAE1BC,YAAY,EAACJ,gBAFa;EAG1BK,QAAQ,EAAC;IACLS,KAAK,CAACP,KAAD,EAAO;MAACA,KAAK,CAACN,eAAN,GAAsB,IAAtB;IAA2B,CADnC;;IAELc,MAAM,CAACR,KAAD,EAAO;MAACA,KAAK,CAACN,eAAN,GAAsB,KAAtB;IAA4B;;EAFrC;AAHiB,CAAD,CAA7B,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA,MAAMe,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAE;IAACnB,OAAO,EAACI,YAAY,CAACe,OAAtB;IAA8BC,IAAI,EAACL,SAAS,CAACI;EAA7C;AADgB,CAAD,CAA5B;AAGA,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}