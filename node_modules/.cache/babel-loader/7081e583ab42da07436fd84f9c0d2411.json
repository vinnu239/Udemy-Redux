{"ast":null,"code":"//import { legacy_createStore as createStore } from 'redux';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst intState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  intState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    showCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // // using redux \n// const counterReducer = (state = intState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     };\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  counter: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","intState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","store","reducer","counterActions","actions"],"sources":["C:/Users/vinovinodkumar/Desktop/udemy/01-starting-project/src/store/index.js"],"sourcesContent":["//import { legacy_createStore as createStore } from 'redux';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nconst intState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    intState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.amount;\r\n        },\r\n        showCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        }\r\n\r\n    }\r\n})\r\n// // using redux \r\n// const counterReducer = (state = intState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     };\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter\r\n//         }\r\n//     }\r\n//     return state;\r\n\r\n// }\r\n\r\n// const store = createStore(counterReducer);\r\nconst store = configureStore({\r\n    counter :counterSlice.reducer\r\n})\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,QAAQ,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAAjB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SADuB;EAE7BJ,QAF6B;EAG7BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAQ;MACbA,KAAK,CAACN,OAAN;IACH,CAHK;;IAINO,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACN,OAAN;IACH,CANK;;IAONQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;IACH,CATK;;IAUNT,WAAW,CAACK,KAAD,EAAO;MACdA,KAAK,CAACL,WAAN,GAAkB,CAACK,KAAK,CAACL,WAAzB;IACH;;EAZK;AAHmB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA,MAAMU,KAAK,GAAGd,cAAc,CAAC;EACzBG,OAAO,EAAEE,YAAY,CAACU;AADG,CAAD,CAA5B;AAGA,OAAO,MAAMC,cAAc,GAAGX,YAAY,CAACY,OAApC;AAEP,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}